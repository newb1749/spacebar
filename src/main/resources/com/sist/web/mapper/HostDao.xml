<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.HostDao">
	<!-- ROOM -->
	<resultMap id="roomResultMap" type="com.sist.web.model.Room">
	    <id property="roomSeq" column="ROOM_SEQ"/>
	    <result property="roomCatSeq" column="ROOM_CAT_SEQ"/>
	    <result property="hostId" column="HOST_ID"/>
	    <result property="roomAddr" column="ROOM_ADDR"/>
	    <result property="latitude" column="LATITUDE"/>
	    <result property="longitude" column="LONGITUDE"/>
	    <result property="region" column="REGION"/>
	    <result property="regDt" column="REG_DT"/>
	    <result property="updateDt" column="UPDATE_DT"/>
	    <result property="autoConfirmYn" column="AUTO_CONFIRM_YN"/>
	    <result property="roomTitle" column="ROOM_TITLE"/>
	    <result property="roomDesc" column="ROOM_DESC"/>
	    <result property="cancelPolicy" column="CANCEL_POLICY"/>
	    <result property="averageRating" column="AVERAGE_RATING"/>
	    <result property="reviewCount" column="REVIEW_COUNT"/>
	    <result property="minTimes" column="MIN_TIMES"/>
	    <result property="maxTimes" column="MAX_TIMES"/>
	    <result property="delYn" column="DEL_YN"/>
	    <result property="saleYn" column="SALE_YN"/>
	    <result property="mainImageName" column="MAIN_IMAGE_NAME"/>
	</resultMap>
	<!-- USER -->
	<resultMap id="userResultMap" type="com.sist.web.model.User">
	    <id property="userId" column="USER_ID"/>
	    <result property="userPwd" column="USER_PWD"/>
	    <result property="userName" column="USER_NAME"/>
	    <result property="email" column="EMAIL"/>
	    <result property="phone" column="PHONE"/>
	    <result property="userAddr" column="USER_ADDR"/>
	    <result property="joinDt" column="JOIN_DT"/>
	    <result property="nickname" column="NICKNAME"/>
	    <result property="grade" column="GRADE"/>
	    <result property="profImgExt" column="PROF_IMG_EXT"/>
	    <result property="gender" column="GENDER"/>
	    <result property="birthDt" column="BIRTH_DT"/>
	    <result property="userType" column="USER_TYPE"/>
	    <result property="approvStat" column="APPROV_STAT"/>
	    <result property="userStat" column="USER_STAT"/>
	    <result property="mile" column="MILE"/>
	    <result property="updateDt" column="UPDATE_DT"/>
	</resultMap>
	
	<resultMap id="statResultMap" type="map">
	  <result column="TOTALSALES" property="totalSales"/>
	  <result column="TOTALAMOUNT" property="totalAmount"/>
	  <result column="AVGRATING" property="avgRating"/>
	  <result column="RSV_SEQ" property="rsvSeq"/>
	</resultMap>

	
	<select id="selectRoomListByHostId" resultMap="roomResultMap" parameterType="string">
	    SELECT
	        R.ROOM_SEQ,
	        R.ROOM_CAT_SEQ,
	        R.HOST_ID,
	        R.ROOM_ADDR,
	        R.LATITUDE,
	        R.LONGITUDE,
	        R.REGION,
	        R.REG_DT,
	        R.UPDATE_DT,
	        R.AUTO_CONFIRM_YN,
	        R.ROOM_TITLE,
	        R.ROOM_DESC,
	        R.CANCEL_POLICY,
	        R.AVERAGE_RATING,
	        R.REVIEW_COUNT,
	        R.MIN_TIMES,
	        R.MAX_TIMES,
	        R.DEL_YN,
	        R.SALE_YN,
	        RI.ROOM_IMG_NAME AS MAIN_IMAGE_NAME
	    FROM ROOM R
	    LEFT JOIN ROOM_IMAGE RI
	        ON R.ROOM_SEQ = RI.ROOM_SEQ
	       AND RI.IMG_TYPE = 'main'
	       AND RI.SORT_ORDER = 1
	    WHERE R.HOST_ID = #{hostId}
	      AND R.DEL_YN = 'N'
	    ORDER BY R.ROOM_SEQ DESC
	</select>


	
	<update id="softDeleteRoom" parameterType="int">
	    UPDATE ROOM
	    SET DEL_YN = 'Y',
	        SALE_YN = 'N'
	    WHERE ROOM_SEQ = #{roomSeq}
	</update>
	
	<update id="stopSellingRoom" parameterType="int">
	    UPDATE ROOM
	    SET SALE_YN = 'N'
	    WHERE ROOM_SEQ = #{roomSeq}
	</update>
	
	<update id="resumeSellingRoom" parameterType="int">
	    UPDATE ROOM
	    SET SALE_YN = 'Y'
	    WHERE ROOM_SEQ = #{roomSeq}
	</update>
	
	
	<!-- host/main.jpg 에서 쓰임. 총 판매 건수 (결제 완료 건수) -->
	<!-- 총 판매 건수 (결제 완료 건수) -->
	<select id="selectTotalSalesCountByPeriod" parameterType="map" resultType="int">
	  SELECT COUNT(*)
	  FROM RESERVATION RS
	  JOIN ROOM_TYPE RT ON RS.ROOM_TYPE_SEQ = RT.ROOM_TYPE_SEQ
	  JOIN ROOM RM ON RT.ROOM_SEQ = RM.ROOM_SEQ
	  WHERE RS.RSV_PAYMENT_STAT = 'PAID'
	    AND RS.RSV_STAT = 'CONFIRMED'
	    AND RM.HOST_ID = #{hostId}
	  <choose>
	    <when test="period == 'week' and periodDetail != null and periodDetail != ''">
	      AND RS.REG_DT &gt;= TO_DATE(SUBSTR(#{periodDetail}, 1, 10), 'YYYY-MM-DD')
	      AND RS.REG_DT &lt; TO_DATE(SUBSTR(#{periodDetail}, 12, 10), 'YYYY-MM-DD') + 1
	    </when>
	    <when test="period == 'month' and periodDetail != null and periodDetail != ''">
	      AND TO_CHAR(RS.REG_DT, 'YYYY-MM') = #{periodDetail}
	    </when>
	    <when test="period == 'year' and periodDetail != null and periodDetail != ''">
	      AND TO_CHAR(RS.REG_DT, 'YYYY') = #{periodDetail}
	    </when>
	  <otherwise>
	    -- total의 경우 조건 없음 (전체)
	  </otherwise>
	  </choose>
	</select>

	
	
	<!-- 총 정산 금액 (FINAL_AMT 기준) -->
	<select id="selectTotalSalesAmountByPeriod" parameterType="map" resultType="int">
	  SELECT NVL(SUM(NVL(RS.FINAL_AMT, 0)), 0)
	  FROM RESERVATION RS
	  JOIN ROOM_TYPE RT ON RS.ROOM_TYPE_SEQ = RT.ROOM_TYPE_SEQ
	  JOIN ROOM RM ON RT.ROOM_SEQ = RM.ROOM_SEQ
	  WHERE RS.RSV_PAYMENT_STAT = 'PAID'
	    AND RS.RSV_STAT = 'CONFIRMED'
	    AND RM.HOST_ID = #{hostId}
	  <choose>
	    <when test="period == 'week' and periodDetail != null and periodDetail != ''">
	      AND RS.REG_DT &gt;= TO_DATE(SUBSTR(#{periodDetail}, 1, 10), 'YYYY-MM-DD')
	      AND RS.REG_DT &lt; TO_DATE(SUBSTR(#{periodDetail}, 12, 10), 'YYYY-MM-DD') + 1
	    </when>
	    <when test="period == 'month' and periodDetail != null and periodDetail != ''">
	      AND TO_CHAR(RS.REG_DT, 'YYYY-MM') = #{periodDetail}
	    </when>
	    <when test="period == 'year' and periodDetail != null and periodDetail != ''">
	      AND TO_CHAR(RS.REG_DT, 'YYYY') = #{periodDetail}
	    </when>
	  <otherwise>
	    -- total의 경우 조건 없음 (전체)
	  </otherwise>
	  </choose>
	</select>
	

	<!-- 날짜 선택용 쿼리 안씀. 3개로 나눠씀(HostDao2개, ReviewDao1개)-->
	<select id="getStatsByPeriod" resultType="map" parameterType="map">
	  SELECT
	    COUNT(*) AS totalSales,
	    NVL(SUM(RS.FINAL_AMT), 0) AS totalAmount
	  FROM RESERVATION RS
	  WHERE RS.RSV_STAT = 'CONFIRMED'
	    AND RS.RSV_PAYMENT_STAT = 'PAID'
	    AND RS.HOST_ID = #{hostId}
	  <choose>
	    <when test="period == 'week'">
	      AND RS.REG_DT BETWEEN TO_DATE(SUBSTR(#{periodDetail, jdbcType=VARCHAR}, 1, 10), 'YYYY-MM-DD')
	                        AND TO_DATE(SUBSTR(#{periodDetail, jdbcType=VARCHAR}, 12, 10), 'YYYY-MM-DD')
	    </when>
	    <when test="period == 'month'">
	      AND TO_CHAR(RS.REG_DT, 'YYYY-MM') = #{periodDetail, jdbcType=VARCHAR}
	    </when>
	    <when test="period == 'year'">
	      AND TO_CHAR(RS.REG_DT, 'YYYY') = #{periodDetail, jdbcType=VARCHAR}
	    </when>
	    <!-- 'total'일 경우 조건 없음 -->
	  </choose>
	</select>


	<select id="selectStatsByGroup" parameterType="map" resultType="map">
	  SELECT
	    <choose>
	      <when test="groupBy == 'week'">
	        TO_CHAR(RS.REG_DT, 'YYYY') || '년 ' || TO_CHAR(RS.REG_DT, 'IW') || '주차' AS label,
	      </when>
	      <when test="groupBy == 'month'">
	        TO_CHAR(RS.REG_DT, 'YYYY-MM') AS label,
	      </when>
	      <when test="groupBy == 'year'">
	        TO_CHAR(RS.REG_DT, 'YYYY') AS label,
	      </when>
	    </choose>
	    COUNT(*) AS salesCount,
	    SUM(NVL(RS.FINAL_AMT, 0)) AS salesAmount,
	    ROUND(AVG(NVL(RV.RATING, 0)), 1) AS avgRating
	  FROM RESERVATION RS
	  JOIN ROOM_TYPE RT ON RS.ROOM_TYPE_SEQ = RT.ROOM_TYPE_SEQ
	  JOIN ROOM RM ON RT.ROOM_SEQ = RM.ROOM_SEQ
	  LEFT JOIN REVIEW RV ON RS.RSV_SEQ = RV.RSV_SEQ AND RV.REVIEW_STAT = 'Y'
	  WHERE RS.RSV_PAYMENT_STAT = 'PAID'
	    AND RS.RSV_STAT = 'CONFIRMED'
	    AND RM.HOST_ID = #{hostId}
	    AND RS.REG_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD')
	                      AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  GROUP BY
	    <choose>
	      <when test="groupBy == 'week'">
	        TO_CHAR(RS.REG_DT, 'YYYY'), TO_CHAR(RS.REG_DT, 'IW')
	      </when>
	      <when test="groupBy == 'month'">
	        TO_CHAR(RS.REG_DT, 'YYYY-MM')
	      </when>
	      <when test="groupBy == 'year'">
	        TO_CHAR(RS.REG_DT, 'YYYY')
	      </when>
	    </choose>
	  ORDER BY 1
	</select>


	
	
	
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.UserDao_mj">

	<resultMap type="com.sist.web.model.User_mj" id="userResultMap">
		<id column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="USER_ADDR" property="userAddr" />
		<result column="JOIN_DT" property="joinDt" />
		<result column="NICKNAME" property="nickName" />
		<result column="GRADE" property="grade" />
		<result column="PROF_IMG_EXT" property="profImgExt" />
		<result column="GENDER" property="gender" />
		<result column="BIRTH_DT" property="birthDt" />
		<result column="USER_TYPE" property="userType" />
		<result column="APPROV_STAT" property="approvStat" />
		<result column="USER_STAT" property="userStat" />
		<result column="MILE" property="mile" />
		<result column="UPDATE_DT" property="updateDt" />
	</resultMap>

	<!-- 회원조회 -->
  	<select id="userSelect" parameterType="String" resultMap="userResultMap">
  		SELECT USER_ID,
		       NVL(USER_PWD,'') USER_PWD,
		       NVL(USER_NAME, '') USER_NAME,
		       NVL(EMAIL,'') EMAIL,
		       NVL(PHONE,'') PHONE,
		       NVL(USER_ADDR,'') USER_ADDR,
		       NVL(TO_CHAR(JOIN_DT,'YYYY.MM.DD HH24:MI:SS'),'') JOIN_DT,
		       NVL(NICKNAME,'') NICKNAME,
		       NVL(GRADE,'') GRADE,
		       NVL(PROF_IMG_EXT,'') PROF_IMG_EXT,
		       NVL(GENDER,'') GENDER,
		       NVL(TO_CHAR(BIRTH_DT,'YYYY.MM.DD'),'') BIRTH_DT,
		       NVL(USER_TYPE,'G') USER_TYPE,
		       NVL(APPROV_STAT,'Y') APPROV_STAT,
		       NVL(USER_STAT,'Y') USER_STAT,
		       NVL(MILE,0) MILE,
		       NVL(TO_CHAR(UPDATE_DT,'YYYY.MM.DD HH24:MI:SS'),'') UPDATE_DT
		  FROM SB_USER
		 WHERE USER_ID = #{value}
  	</select>
  	
  	<!-- 닉네임 중복 관련 -->
  	<select id="nicknameSelect" parameterType="String" resultMap="userResultMap">
  		SELECT USER_ID,
		       NVL(USER_PWD,'') USER_PWD,
		       NVL(USER_NAME, '') USER_NAME,
		       NVL(EMAIL,'') EMAIL,
		       NVL(PHONE,'') PHONE,
		       NVL(USER_ADDR,'') USER_ADDR,
		       NVL(TO_CHAR(JOIN_DT,'YYYY.MM.DD HH24:MI:SS'),'') JOIN_DT,
		       NVL(NICKNAME,'') NICKNAME,
		       NVL(GRADE,'') GRADE,
		       NVL(PROF_IMG_EXT,'') PROF_IMG_EXT,
		       NVL(GENDER,'') GENDER,
		       NVL(TO_CHAR(BIRTH_DT,'YYYY.MM.DD'),'') BIRTH_DT,
		       NVL(USER_TYPE,'G') USER_TYPE,
		       NVL(APPROV_STAT,'Y') APPROV_STAT,
		       NVL(USER_STAT,'Y') USER_STAT,
		       NVL(MILE,0) MILE,
		       NVL(TO_CHAR(UPDATE_DT,'YYYY.MM.DD HH24:MI:SS'),'') UPDATE_DT
		  FROM SB_USER
		 WHERE NICKNAME = #{value}
  	</select>
  	
  	<!-- 회원등록 -->
  	<insert id="userInsert" parameterType="com.sist.web.model.User_mj">
  		INSERT INTO SB_USER (
		    USER_ID,
		    USER_PWD,
		    USER_NAME,
		    EMAIL,
		    PHONE,
		    USER_ADDR,
		    JOIN_DT,
		    NICKNAME,
		    GRADE,
		    PROF_IMG_EXT,
		    GENDER,
		    BIRTH_DT,
		    USER_TYPE,
		    APPROV_STAT,
		    USER_STAT,
		    MILE,
		    UPDATE_DT
		) VALUES ( #{userId},
		           #{userPwd},
		           #{userName},
		           #{email},
		           #{phone},
		           #{userAddr},
		           SYSDATE,
		           #{nickName},
		           #{grade},
		           #{profImgExt},
		           #{gender},
		           #{birthDt},
		           #{userType},
		           #{approvStat},
		           #{userStat},
		           0,
		           SYSDATE)
  	</insert>
  	
  	<!-- 회원정보수정 -->
  	<update id="userUpdate" parameterType="com.sist.web.model.User_mj">
  		UPDATE SB_USER
		   SET USER_PWD = #{userPwd},
		       USER_NAME = #{userName},
		       EMAIL = #{email},
		       PHONE = #{phone},
		       USER_ADDR = #{userAddr},
		       NICKNAME = #{nickName},
		       PROF_IMG_EXT = #{profImgExt}
		 WHERE USER_ID = #{userId}
  	</update>
  	
  	<!-- 회원탈퇴 -->
  	<update id="userDelete" parameterType="com.sist.web.model.User_mj">
  		UPDATE SB_USER
		   SET USER_STAT = #{userStat}
		 WHERE USER_ID = #{userId}
  	</update>
  	
  	<!-- 아이디 찾기 -->
  	<select id="searchId" parameterType="com.sist.web.model.User_mj" resultMap="userResultMap">
  		SELECT USER_ID,
		       NVL(USER_PWD,'') USER_PWD,
		       NVL(USER_NAME, '') USER_NAME,
		       NVL(EMAIL,'') EMAIL,
		       NVL(PHONE,'') PHONE,
		       NVL(USER_ADDR,'') USER_ADDR,
		       NVL(TO_CHAR(JOIN_DT,'YYYY.MM.DD HH24:MI:SS'),'') JOIN_DT,
		       NVL(NICKNAME,'') NICKNAME,
		       NVL(GRADE,'') GRADE,
		       NVL(PROF_IMG_EXT,'') PROF_IMG_EXT,
		       NVL(GENDER,'') GENDER,
		       NVL(TO_CHAR(BIRTH_DT,'YYYY.MM.DD'),'') BIRTH_DT,
		       NVL(USER_TYPE,'G') USER_TYPE,
		       NVL(APPROV_STAT,'Y') APPROV_STAT,
		       NVL(USER_STAT,'Y') USER_STAT,
		       NVL(MILE,0) MILE,
		       NVL(TO_CHAR(UPDATE_DT,'YYYY.MM.DD HH24:MI:SS'),'') UPDATE_DT
		  FROM SB_USER
		 WHERE USER_NAME = #{userName}
		   AND PHONE = #{phone}
  	</select>
  	
  	<!-- 비밀번호 찾기 -->
  	<select id="searchPwd" parameterType="com.sist.web.model.User_mj" resultMap="userResultMap">
  		SELECT USER_ID,
		       NVL(USER_PWD,'') USER_PWD,
		       NVL(USER_NAME, '') USER_NAME,
		       NVL(EMAIL,'') EMAIL,
		       NVL(PHONE,'') PHONE,
		       NVL(USER_ADDR,'') USER_ADDR,
		       NVL(TO_CHAR(JOIN_DT,'YYYY.MM.DD HH24:MI:SS'),'') JOIN_DT,
		       NVL(NICKNAME,'') NICKNAME,
		       NVL(GRADE,'') GRADE,
		       NVL(PROF_IMG_EXT,'') PROF_IMG_EXT,
		       NVL(GENDER,'') GENDER,
		       NVL(TO_CHAR(BIRTH_DT,'YYYY.MM.DD'),'') BIRTH_DT,
		       NVL(USER_TYPE,'G') USER_TYPE,
		       NVL(APPROV_STAT,'Y') APPROV_STAT,
		       NVL(USER_STAT,'Y') USER_STAT,
		       NVL(MILE,0) MILE,
		       NVL(TO_CHAR(UPDATE_DT,'YYYY.MM.DD HH24:MI:SS'),'') UPDATE_DT
		  FROM SB_USER
		 WHERE USER_ID = #{userId}
		   AND USER_NAME = #{userName}
		   AND PHONE = #{phone}
  	</select>
  	

		
	<!-- 현재 마일리지 조회 -->
	<select id="selectMileage" resultType="int">
		SELECT NVL(MILE, 0)
		FROM SB_USER
		WHERE USER_ID = #{userId}
	</select>

	<!-- 마일리지 충전 -->
	<update id="updateMileage">
		UPDATE SB_USER
		SET MILE = NVL(MILE, 0) + #{amount},
			UPDATE_DT = SYSDATE
		WHERE USER_ID = #{userId}
	</update>

	<!-- 마일리지 이력 추가 -->
	<insert id="insertMileageHistory" parameterType="com.sist.web.model.MiliageHistory">
		INSERT INTO MILEAGE_HISTORY 
		(
			MILE_HISTORY_SEQ,
			USER_ID,
			TRX_TYPE,
			TRX_AMT,
			BALANCE_AFTER_TRX,
			TRX_DT
		) VALUES (
			SEQ_MILEAGE_HISTORY_SEQ.NEXTVAL, 
			#{userId},
			#{trxType},
			#{trxAmt},
			#{balanceAfterTrx},
			SYSDATE
		)
	</insert>
		
	<select id="selectMileageHistory" parameterType="string" resultType="com.sist.web.model.MiliageHistory">
		SELECT 
			MILE_HISTORY_SEQ AS mileHistorySeq,
			USER_ID,
			TRX_TYPE,
			TRX_AMT,
			BALANCE_AFTER_TRX,
			TO_CHAR(TRX_DT, 'YYYY-MM-DD HH24:MI:SS') AS trxDt
		FROM MILEAGE_HISTORY
		WHERE USER_ID = #{userId}
		ORDER BY TRX_DT DESC
	</select>

</mapper>


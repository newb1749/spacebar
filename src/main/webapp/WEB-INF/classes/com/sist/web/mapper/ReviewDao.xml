<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.ReviewDao">
	
    <resultMap id="reviewResultMap" type="com.sist.web.model.Review">
		<id property="reviewSeq" column="REVIEW_SEQ" />
		<result property="rsvSeq" column="RSV_SEQ" />
		<result property="userId" column="USER_ID" />
		<result property="reviewTitle" column="REVIEW_TITLE" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="rating" column="RATING" />
		<result property="reviewStat" column="REVIEW_STAT" />
		<result property="regDt" column="REG_DT" />
		<result property="updateDt" column="UPDATE_DT" />
		<result property="roomTitle" column="ROOM_TITLE" />         
		<result property="roomTypeTitle" column="ROOM_TYPE_TITLE" />
    </resultMap>
	
	<!-- 1. 리뷰 쓰기 전 예약 상태, 결제 상태 확인 -->
	<select id="findStatbyRsvSeq" resultType="com.sist.web.model.Reservation" parameterType="int">
	    SELECT 
	        RSV_STAT         AS rsvStat,        
	        RSV_PAYMENT_STAT AS rsvPaymentStat  
	    FROM 
	        reservation
	    WHERE 
	        RSV_SEQ = #{rsvSeq}
	</select>
	
	<!-- 2. 리뷰 등록 -->
	<insert id="insertReview" parameterType="com.sist.web.model.Review">
	  		<selectKey keyProperty="reviewSeq" resultType="int" order="BEFORE">
  			SELECT SEQ_REVIEW_SEQ.NEXTVAL FROM DUAL
  			</selectKey>
			 INSERT INTO review (
				    review_seq,
				    rsv_seq,
				    user_id,
				    review_title,
				    review_content,
				    rating,
				    review_stat,
				    reg_dt,
				    update_dt
				) VALUES ( #{reviewSeq},
				           #{rsvSeq},
				           #{userId},
				           #{reviewTitle},
				           #{reviewContent},
				           #{rating},
				           'Y',
				           SYSDATE,
				           SYSDATE)
	</insert>
	
	<!-- 3. 내 리뷰 목록 조회 -->
	<select id="selectMyReviews" parameterType="string" resultType="com.sist.web.model.Review">
		        SELECT
		            R.REVIEW_SEQ,
		            R.REVIEW_TITLE,
		            R.RATING,
		            TO_CHAR(R.REG_DT, 'YYYY-MM-DD') AS REG_DT,
		            RM.ROOM_TITLE,      
		            RT.ROOM_TYPE_TITLE 
		        FROM
		            REVIEW R
		        INNER JOIN RESERVATION RS ON R.RSV_SEQ = RS.RSV_SEQ
		        INNER JOIN ROOM RM ON RS.ROOM_SEQ = RM.ROOM_SEQ
		        INNER JOIN ROOM_TYPE RT ON RS.ROOM_TYPE_SEQ = RT.ROOM_TYPE_SEQ
		        WHERE
		            R.USER_ID = #{userId}
		        AND R.REVIEW_STAT = 'Y'
		        ORDER BY
		            R.REVIEW_SEQ DESC
	</select>
	
	<!--  1:N (일대다) 매핑 -->
	<resultMap id="reviewWithImagesResultMap" type="com.sist.web.model.Review" extends="reviewResultMap">
	    <collection property="reviewImageList" ofType="com.sist.web.model.ReviewImage" 
	                select="com.sist.web.dao.ReviewImageDao.selectReviewImages" column="REVIEW_SEQ" />
	</resultMap>
	
	<!-- 4. 수정할 리뷰 1건 조회 (이미지 포함) -->
	<select id="selectReview" parameterType="int" resultMap="reviewWithImagesResultMap">
	    SELECT * FROM REVIEW WHERE REVIEW_SEQ = #{reviewSeq}
	</select>
	
	<!-- 5. 리뷰 상태 'N'으로 변경 (소프트 삭제) -->
	<update id="inactiveReview" parameterType="com.sist.web.model.Review">
	    UPDATE REVIEW
	    SET
	        REVIEW_STAT = 'N',
	        UPDATE_DT = SYSDATE
	    WHERE
	        REVIEW_SEQ = #{reviewSeq}
	    AND 
	        USER_ID = #{userId}
	</update>
	
	<!-- 6. 리뷰 수정 (제목, 내용, 평점) -->
	<update id="updateReview" parameterType="com.sist.web.model.Review">
        UPDATE REVIEW
        SET
            REVIEW_TITLE = #{reviewTitle},
            REVIEW_CONTENT = #{reviewContent},
            RATING = #{rating},
            UPDATE_DT = SYSDATE
        WHERE
            REVIEW_SEQ = #{reviewSeq}
        AND 
            USER_ID = #{userId}
    </update>
    
    <!-- 7. 수정할 리뷰 1건 조회 (이미지 포함)  -->
    <select id="selectReviewForEdit" parameterType="int" resultMap="reviewWithImagesResultMap">
        SELECT * FROM REVIEW WHERE REVIEW_SEQ = #{reviewSeq}
    </select>

</mapper>
